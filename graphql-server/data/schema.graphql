   type Cliente {
        id: ID
        nombre: String
        apellido: String
        empresa: String
        email: String
        edad: Int
        tipo: TipoCliente
        pedidos: [Pedido]
    }
    type Subscription {
        clientAdded: Cliente
    }
    type Pedido {
        producto: String
        precio: Int
    }
    type Token {
        token: String
    }
    type User {
        id: ID
        username: String
    }
    enum TipoCliente {
        BASICO
        PREMIUM
    }   
    type Query {
        getClientes(limite: Int) : [Cliente]
        getCliente(id: ID): Cliente
        #Obtiene informacion de un usuario logueado
        getCurrentUser: User
    }
    input PedidoInput {
        producto: String
        precio: Int
    }
    input ClienteInput {
        id: ID
        nombre: String!
        apellido: String!
        empresa: String!
        email: String!
        edad: Int!
        tipo: TipoCliente
        pedidos: [PedidoInput]
    }
    """ Descripción general """
    type Mutation {
        #Este es un comentario
        """ Crear nuevo cliente """
        crearCliente(input: ClienteInput) : Cliente
        """ Actualizar un cliente """
        actualizarCliente(input: ClienteInput) : Cliente
        """ Eliminar un cliente """
        eliminarCliente(id: ID) : String 
        """ Crear un usuario """
        crearUsuario(username: String!, password: String!) : String
        """ Autenticación """
        auth(username: String!, password: String!) : Token          
    }